;(function () {

    // This file contains the code to define the graphics and then
    // renders them using data randomly generated by data.js.

    // Define graphics ...

    var linechart = gg(
        { geometry: 'line', mapping: { x: 'd', y: 'r', group: 'subject', color: 'subject'} },
        { geometry: 'text', mapping: { x: 'd', y: 'r', }, text: '{d}, {r}', show: 'hover' },
        { aesthetic: 'color', range: ['#CFF09E', '#A8DBA8', '#79BD9A', '#3B8686'] });

    var combined = gg(
        { geometry: 'point', mapping: { x: 'd', y: 'r' }, size: 3 },
        { geometry: 'line', mapping: { x: 'd', y: 'r' } });

    var barchart = gg(
        { geometry: 'interval', mapping: { x: 'd', y: 'r' }, color: 'blue', width: 2 },
        { aesthetic: 'y', min: 0 });

    var quadrants = gg(
        { geometry: 'point', mapping: { x: 'x', y: 'y', size: 'size' } },
        { geometry: 'text', mapping: { x: 'x', y: 'y' }, text: '{name}: {size}',  show: 'hover' },
        { aesthetic: 'size', range: [ 1, 5 ]});

    var histogram = gg(
        { geometry: 'interval', mapping: { x: 'group', y: 'count', color: 'group' }, width: 20, statistic: { kind: 'sum', group: 'who', variable: 'purchases' } },
        { aesthetic: 'x', type: 'categorical' },
        { aesthetic: 'y', min: 0 });

    var semilog = gg(
        { geometry: 'point', mapping: { x: 'd', y: 'r' }, size: 3 },
        { geometry: 'line', mapping: { x: 'd', y: 'r' } },
        { aesthetic: 'y', type: 'log', legend: 'whatever' },
        { aesthetic: 'x', legend: 'foo' });

    var heightHistogram = gg(
        { geometry: 'interval', mapping: { x: 'bin', y: 'count' }, statistic: { kind: 'bin', variable: 'height', bins: 30 }},
        { aesthetic: 'x', type: 'categorical' },
        { aesthetic: 'y', min: 0 });

    var twoPopulations = gg(
        { geometry: 'point', name: 'twoPopulations', mapping: { x: 'intelligence', y: 'wisdom', color: 'group' }});

    var boxplot = gg(
        { geometry: 'box', mapping: { x: 'group', y: false }, statistic: { kind: 'box', group: 'grade', variable: 'value' }},
        { aesthetic: 'x', type: 'categorical' });

    var symmetric = gg(
        { geometry: 'line', mapping: { x: 'd', y: 'r' } },
        { aesthetic: 'y', center: 0 });

    var areachartSmooth = gg(
        { geometry: 'area', mapping: { x: 'a', y: false, y0: 'top', y1: 'bottom' }, smooth: true });

    var areachart = gg(
        { geometry: 'area', mapping: { x: 'a', y: false, y0: 'top', y1: 'bottom' } });

    // ... and render 'em

    var data = gg.sampleData;
    var div  = d3.select('#examples');
    var opts = { width: 300, height: 200, padding: 35 };

    linechart(data.upwardSubjects, div, opts);
    combined(data.upward, div, opts);
    barchart(_.map(data.upward, function (d) { return { d: d.d, r: Math.max(d.r, 0) }; }), div, opts);
    quadrants(data.quadrants, div, opts);
    histogram(data.purchases, div, opts);
    semilog(data.semiLogData, div, opts);
    heightHistogram(data.heightWeight, div, opts);
    twoPopulations(data.twoPopulations, div, opts);
    boxplot(data.forBoxPlots, div, opts);
    symmetric(data.toBeCentered, div, opts);
    areachartSmooth(data.upwardPairs, div, opts);
    areachart(data.upwardPairs, div, opts);

})();
